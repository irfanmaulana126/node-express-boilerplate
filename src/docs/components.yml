components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        id_card:
          type: string
        phone:
          type: number
        language:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        first_name: fake
        last_name: name
        id_card: 1234817
        phone: 081923
        language: ID
        email: fake@example.com
        password: password1
        role: user
    
    Country:
      type: object
      properties:
        name_country:
          type: string
        code:
          type: string
      example:
        id: 5ebac534954b54139806c112
        name_country: Indonesia
        code: ID

    Province:
      type: object
      properties:
        name_province:
          type: string
        kd_province:
          type: string
      example:
        id: 5ebac534954b54139806c112
        name_country: Jawa Barat
        kd_province: "31"

    Regency:
      type: object
      properties:
        id_province:
          type: string
        kd_province:
          type: string
        kd_regency:
          type: string
        name_regency:
          type: string
      example:
        id: 5ebac534954b54139806c113
        id_province: 5ebac534954b54139806c114
        kd_province: "31"
        name_regency: Depok
        kd_regency: "3111"

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    DuplicateCode:
      description: Code already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Code already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
